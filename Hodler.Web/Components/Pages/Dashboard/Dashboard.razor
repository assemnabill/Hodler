@page "/"
@layout MainLayout
@rendermode InteractiveServer
@attribute [StreamRendering(true)]
@attribute [OutputCache(Duration = 5)]
@using System.Globalization
@using Hodler.Web.Components.Layout
@using Hodler.Web.Services.Portfolio
@using Hodler.Web.Components.Shared.Components
@inject IPortfolioServiceViewService PortfolioServiceViewService
@implements IDisposable

<PageTitle>Dashboard</PageTitle>

@if (IsLoading)
{
    <LoadingComponent></LoadingComponent>
}
else
{
    <div class="padding-window">
        <div class="container">
            <div style="font-size: 30px;">
                <b>Hello, Hodler!</b>
            </div>
            <br/>
            <RadzenLabel Style="font-weight: lighter; font-size: 20px;" Text="Portfolio Value"></RadzenLabel>

            @{
                var portfolioValue = PortfolioServiceViewService.PortfolioSummary?.CurrentValue
                    .ToString("C", CultureInfo.CurrentCulture);
            }
            <RadzenText Style="font-size: 35px;" Text="@portfolioValue"></RadzenText>
            <PortifolioValueChartComponent></PortifolioValueChartComponent>
        </div>
        <PortifolioMetricsComponent PortfolioSummary="PortfolioServiceViewService.PortfolioSummary"></PortifolioMetricsComponent>
    </div>
}

@code
{
    [Inject] private IPortfolioServiceViewService _viewService { get; set; }

    private bool IsLoading => _viewService.PortfolioSummary is null;

    protected override async Task OnInitializedAsync()
    {
        await _viewService.InitPortfolioSummaryAsync();
        _viewService.PortfolioSummaryChanged += OnPortfolioSummaryChanged;

        await base.OnInitializedAsync();
    }

    private void OnPortfolioSummaryChanged(object? sender, EventArgs e)
        => InvokeAsync(StateHasChanged);

    public void Dispose()
        => _viewService.PortfolioSummaryChanged -= OnPortfolioSummaryChanged;
}

<style>
    .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
        font-family: Arial, sans-serif;
    }
</style>