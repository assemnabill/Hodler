@page "/"
@layout MainLayout
@rendermode InteractiveServer
@inject HodlerApiClient HodlerApi
@attribute [StreamRendering(true)]
@attribute [OutputCache(Duration = 5)]
@using Hodler.Contracts.Portfolio.PortfolioSummary
@using Hodler.Web.Components.Layout
@using Hodler.Web.Components.Shared

<PageTitle>Dashboard</PageTitle>

@if (_portfolioSummaryDto == null)
{
    <LoadingComponent></LoadingComponent>
}
else
{
    <div class="padding-window">
        <div class="container">
            <PortifolioValueChartComponent></PortifolioValueChartComponent>
        </div>
        <PortifolioMetricsComponent PortfolioSummary="_portfolioSummaryDto"></PortifolioMetricsComponent>
    </div>
}

@code {
    private PortfolioSummaryDto? _portfolioSummaryDto;

    protected override async Task OnInitializedAsync()
    {
        const string userId = "a315dad9-a26f-4047-b1c0-0133efe30d6f";
        try
        {
            _portfolioSummaryDto = await HodlerApi.GetPortfolioSummaryAsync(userId);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }
    }

}

<style>
    .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
        font-family: Arial, sans-serif;
    }
</style>