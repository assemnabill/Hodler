@page "/home"
@attribute [StreamRendering(true)]
@attribute [OutputCache(Duration = 5)]
@inject HodlerApiClient HodlerApi

<PageTitle>Home</PageTitle>

<h1>Hello, Hodler!</h1>


@if (_transactionSummaryReport == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <h3>Transactions Summary Report</h3>
    <div>
        <b>Net investment: </b> @_transactionSummaryReport.NetInvestedFiat <b>€</b>
    </div>
    <b>Total Bitcoin Owned: </b>
    @_transactionSummaryReport.TotalBtcInvestment
    <b>BTC</b>
    <div>
        <b>Current Bitcoin Price: </b> @_transactionSummaryReport.CurrentBtcPrice <b>€</b>
    </div>
    <div>
        <b>Current Value: </b> @_transactionSummaryReport.CurrentValue <b>€</b>
    </div>
    <div>
        <b>Total Profit: </b> @_transactionSummaryReport.TotalProfitFiat <b>€</b>
    </div>
    <div>
        <b>Total Profit Percentage: </b> @_transactionSummaryReport.TotalProfitPercentage <b>%</b>
    </div>
    <div>
        <b>Average Bitcoin Price: </b> @_transactionSummaryReport.AverageBtcPrice <b>€</b>
    </div>
    <div>
        <b>Tax Free Total Bitcoin Owned: </b> @_transactionSummaryReport.TaxFreeTotalBtcInvestment <b>BTC</b>
    </div>
    <div>
        <b>Tax Free Profit: </b> @_transactionSummaryReport.TaxFreeProfit %
    </div>
}


@code {
    private TransactionsSummaryReport? _transactionSummaryReport;

    protected override async Task OnInitializedAsync()
    {
        _transactionSummaryReport = await HodlerApi.GetTransactionsSummaryReportAsync();
    }

}